# Make certain test/output gets created
rm -rf  sql/pgxntool-test--0.1.0.sql
rm -rf results/ regression.diffs regression.out tmp_check/ log/
/opt/local/bin/asciidoctor  doc/adoc_doc.adoc
/opt/local/bin/asciidoctor  doc/asciidoc_doc.asciidoc
cp sql/pgxntool-test.sql sql/pgxntool-test--0.1.0.sql
@INSTALL@ -c -d '@PG_LOCATION@/share/extension'
@INSTALL@ -c -d '@PG_LOCATION@/share/doc/extension'
@INSTALL@ -c -m 644 ./sql/pgxntool-test--0.1.0.sql ./sql/pgxntool-test--0.1.0--0.1.1.sql ./pgxntool-test.control  '@PG_LOCATION@/share/extension/'
@INSTALL@ -c -m 644 ./doc/adoc_doc.adoc ./doc/asc_doc.asc ./doc/asciidoc_doc.asciidoc ./doc/other.html ./doc/adoc_doc.html ./doc/asciidoc_doc.html '@PG_LOCATION@/share/doc/extension/'
INVOCATION OF pg_regress
(using postmaster on Unix socket, default port)
============== dropping database "contrib_regression" ==============
DROP DATABASE
============== creating database "contrib_regression" ==============
CREATE DATABASE
ALTER DATABASE
============== installing plpgsql                     ==============
CREATE LANGUAGE
============== running regression test queries        ==============
test pgxntool-test            ... FAILED

======================
 1 of 1 tests failed. 
======================

The differences that caused some tests to fail can be viewed in the
file "@TEST_DIR@/repo/test/regression.diffs".  A copy of the test summary that you see
above is saved in the file "@TEST_DIR@/repo/test/regression.out".

make[1]: [installcheck] Error 1 (ignored)
*** @TEST_DIR@/repo/test/expected/pgxntool-test.out
--- @TEST_DIR@/repo/test/results/pgxntool-test.out
***************
*** 0 ****
--- 1,59 ----
+ \i @TEST_DIR@/repo/test/pgxntool/setup.sql
+ \i test/pgxntool/psql.sql
+ -- No status messages
+ \set QUIET true
+ -- Verbose error messages
+ \set VERBOSITY verbose
+ -- Revert all changes on failure.
+ \set ON_ERROR_ROLLBACK 1
+ \set ON_ERROR_STOP true
+ BEGIN;
+ \i test/pgxntool/tap_setup.sql
+ \i test/pgxntool/psql.sql
+ -- No status messages
+ \set QUIET true
+ -- Verbose error messages
+ \set VERBOSITY verbose
+ -- Revert all changes on failure.
+ \set ON_ERROR_ROLLBACK 1
+ \set ON_ERROR_STOP true
+ SET client_min_messages = WARNING;
+ DO $$
+ BEGIN
+ IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname='tap') THEN
+   CREATE SCHEMA tap;
+ END IF;
+ END$$;
+ SET search_path = tap, public;
+ CREATE EXTENSION IF NOT EXISTS pgtap SCHEMA tap;
+ SET client_min_messages = NOTICE;
+ \pset format unaligned
+ \pset tuples_only true
+ \pset pager
+ -- vi: expandtab ts=2 sw=2
+ \i test/deps.sql
+ -- IF NOT EXISTS will emit NOTICEs, which is annoying
+ SET client_min_messages = WARNING;
+ -- Add any test dependency statements here
+ -- Note: pgTap is loaded by setup.sql
+ --CREATE EXTENSION IF NOT EXISTS ...;
+ /*
+  * Now load our extension. We don't use IF NOT EXISTs here because we want an
+  * error if the extension is already loaded (because we want to ensure we're
+  * getting the very latest version).
+  */
+ CREATE EXTENSION "pgxntool-test";
+ -- Re-enable notices
+ SET client_min_messages = NOTICE;
+ SELECT plan(1);
+ 1..1
+ SELECT is(
+   "pgxntool-test"(1,2)
+   , 3
+ );
+ ok 1
+ \i @TEST_DIR@/repo/test/pgxntool/finish.sql
+ SELECT finish();
+ \echo # TRANSACTION INTENTIONALLY LEFT OPEN!
+ # TRANSACTION INTENTIONALLY LEFT OPEN!
+ -- vi: expandtab ts=2 sw=2

======================================================================

# And copy expected output file to output dir that should now exist
# Run make test again
rm -rf  sql/pgxntool-test--0.1.0.sql
rm -rf results/ regression.diffs regression.out tmp_check/ log/
cp sql/pgxntool-test.sql sql/pgxntool-test--0.1.0.sql
@INSTALL@ -c -d '@PG_LOCATION@/share/extension'
@INSTALL@ -c -d '@PG_LOCATION@/share/doc/extension'
@INSTALL@ -c -m 644 ./sql/pgxntool-test--0.1.0.sql ./sql/pgxntool-test--0.1.0--0.1.1.sql ./pgxntool-test.control  '@PG_LOCATION@/share/extension/'
@INSTALL@ -c -m 644 ./doc/adoc_doc.adoc ./doc/adoc_doc.html ./doc/asc_doc.asc ./doc/asciidoc_doc.asciidoc ./doc/asciidoc_doc.html ./doc/other.html ./doc/adoc_doc.html ./doc/asciidoc_doc.html '@PG_LOCATION@/share/doc/extension/'
INVOCATION OF pg_regress
(using postmaster on Unix socket, default port)
============== dropping database "contrib_regression" ==============
DROP DATABASE
============== creating database "contrib_regression" ==============
CREATE DATABASE
ALTER DATABASE
============== installing plpgsql                     ==============
CREATE LANGUAGE
============== running regression test queries        ==============
test pgxntool-test            ... ok

=====================
 All 1 tests passed. 
=====================

######################################
# ^^^ Should be clean output ^^^
######################################
# Remove input and output directories, make sure output is not recreated
rm -rf  sql/pgxntool-test--0.1.0.sql
rm -rf results/ regression.diffs regression.out tmp_check/ log/
cp sql/pgxntool-test.sql sql/pgxntool-test--0.1.0.sql
@INSTALL@ -c -d '@PG_LOCATION@/share/extension'
@INSTALL@ -c -d '@PG_LOCATION@/share/doc/extension'
@INSTALL@ -c -m 644 ./sql/pgxntool-test--0.1.0.sql ./sql/pgxntool-test--0.1.0--0.1.1.sql ./pgxntool-test.control  '@PG_LOCATION@/share/extension/'
@INSTALL@ -c -m 644 ./doc/adoc_doc.adoc ./doc/adoc_doc.html ./doc/asc_doc.asc ./doc/asciidoc_doc.asciidoc ./doc/asciidoc_doc.html ./doc/other.html ./doc/adoc_doc.html ./doc/asciidoc_doc.html '@PG_LOCATION@/share/doc/extension/'
INVOCATION OF pg_regress
(using postmaster on Unix socket, default port)
============== dropping database "contrib_regression" ==============
DROP DATABASE
============== creating database "contrib_regression" ==============
CREATE DATABASE
ALTER DATABASE
============== installing plpgsql                     ==============
CREATE LANGUAGE
============== running regression test queries        ==============
test pgxntool-test            ... ok

=====================
 All 1 tests passed. 
=====================

