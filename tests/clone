#!/bin/bash

trap 'echo "$BASH_SOURCE: line $LINENO" >&2' ERR
set -o errexit -o errtrace -o pipefail

BASEDIR=`cd ${0%/*}; pwd`

. $BASEDIR/../.env
. $TOPDIR/lib.sh

debug_vars 3 TEST_TEMPLATE TEST_REPO
mkdir $TEST_REPO || exit 1

out Cloning tree
[ -n "$TEST_TEMPLATE" ] || die 1 '$TEST_TEMPLATE is not set'
git clone $TEST_TEMPLATE $TEST_REPO 2>&9 # Need to redirect this to avoid cruft in log
cd $TEST_REPO

{
  # Before we do anything else, change origin to something BS so we don't accidentally screw up the real test repo
  git init --bare ../fake_repo > /dev/null
  git remote remove origin
  git remote add origin ../fake_repo
  git push --set-upstream origin master
} 2>&1 # Git is damn chatty...

# If the repo is local then see if the local checkout is on the branch we want
# and if it's dirty. In that case, rsync the files in place instead of doing a
# subtree add
out Installing pgxntool
git subtree add -P pgxntool --squash $PGXNREPO $PGXNBRANCH 2>&1 >/dev/null
if local_repo $PGXNREPO && \
  [ -n "$(cd $PGXNREPO && git status --porcelain)" ]
then
  if [ "$(cd $PGXNREPO && git symbolic-ref --short HEAD)" == "$PGXNBRANCH" ]; then
    error "NOTICE: $PGXNREPO is dirty and on $PGXNBRANCH; using rsync"
    rsync -a $PGXNREPO . 2>&1 >/dev/null
    git add --all
    git commit -m "Committing unsaved pgxntool changes"
  else
    die 2 "repository $PGXNREPO is dirty but not on branch $PGXNBRANCH"
  fi
fi

check_log

# If we don't turn this off we get cruft in the log
#trap - EXIT

#head_log after setup

# vi: expandtab sw=2 ts=2
