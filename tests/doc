#!/bin/bash

trap 'echo "ERROR: $BASH_SOURCE: line $LINENO" >&2' ERR
set -o errexit -o errtrace -o pipefail
#set -o xtrace -o verbose

if [ "$1" == "-v" ]; then
  verboseout=1
  shift
fi
BASEDIR=`cd ${0%/*}; pwd`

. $BASEDIR/../.env
. $TOPDIR/lib.sh
cd $TEST_DIR

# Unset ASCIIDOC so the which logic gets tested
unset ASCIIDOC

get_html() {
  local rc
  html=`echo doc/*.html`
  [ "$html" != 'doc/*.html' ] || html=''
  html=$(for f in $html; do echo $f; done) # This allows for easy grepping
  if [ -n "$other_html" ]; then
    debug_vars 9 html other_html
    rc=0
    echo "$html" | grep -v $other_html || rc=$?
    if [ $rc -gt 1 ]; then
      error "grep returned $rc"
      exit 2
    fi
  else
    debug_vars 9 html
    echo "$html"
  fi
}

check_html() {
  html="$1"
  expected="$2"
  [ $# -eq 2 ] || die 3 "Wrong # of args for check_html()"

  [ "$html" == "$expected" ] || die 5 "make install did not produce expected documentation (expected '$expected', got '$html')"
}

which asciidoc &>/dev/null || which asciidoctor &>/dev/null || die 2 "asciidoc or asciidoctor not found"

rsync -a --delete repo/ doc_repo
cd doc_repo
input=`ls doc/*.adoc doc/*.asciidoc`
expected=$(echo "$input" | sed -Ee 's/(adoc|asciidoc)$/html/')

rm -f $expected
other_html=`get_html`
debug_vars 1 input expected other_html

out Make with no ASCIIDOC should not create docs
docs=$(ASCIIDOC='' make print-DOCS)
clean_docs=$(echo $docs | sed -e 's/other.html//')
debug_vars 2 docs clean_docs
if echo $clean_docs | grep -q html; then
  error "docs='$docs', clean_docs='$clean_docs'"
  die 5 "clean_docs should not contain 'html'"
fi
ASCIIDOC='' make install

[ -z "`get_html`" ] || die 5 "ASCIIDOC='' make install produced the following .html files in doc: " `get_html`

out Make sure missing ASCIIDOC errors out
ASCIIDOC='' make html || rc=$?
if [ $rc != 0 ]; then
  out make returned $rc
else
  die 5 "ASCIIDOC='' make html did not fail"
fi

# Use test since it's the most comprehensive target that should be using install
out Make sure make test with ASCIIDOC works
make print-DOCS
make test
html=`get_html`
check_html "$html" "$expected"

out Make sure make clean does not clean docs
make clean
html2=`get_html`
[ "$html" == "$html2" ] || die 6 "make clean changed .html files (from '$html' to '$html2')"

out Make sure make docclean cleans docs
make print-ASCIIDOC_HTML
make print-DOCS
make print-DOCS_HTML
make docclean
[ -z "`get_html`" ] || die 5 "make docclean left html files behind: " `get_html`

out "Test ASCIIDOC_EXTS='asc'"
ASCIIDOC_EXTS='asc' make html
check_html "`get_html`" 'doc/adoc_doc.html
doc/asc_doc.html
doc/asciidoc_doc.html'

ASCIIDOC_EXTS='asc' make docclean
[ -z "`get_html`" ] || die 5 "ASCIIDOC_EXTS='asc' make docclean left html files behind: " `get_html`

out Ensure things work with no doc directory
make html
rm -rf doc
make print-DOCS
make clean
make docclean
make install

check_log

# vi: expandtab sw=2 ts=2
