#!/bin/bash

trap 'echo "ERROR: $BASH_SOURCE: line $LINENO" >&2' ERR
set -o errexit -o errtrace -o pipefail
#set -o xtrace -o verbose

if [ "$1" == "-v" ]; then
  verboseout=1
  shift
fi
BASEDIR=`cd ${0%/*}; pwd`

. $BASEDIR/../.env
. $TOPDIR/lib.sh

DISTRIBUTION_NAME=distribution_test
EXTENSION_NAME=pgxntool-test # TODO: rename to something less likely to conflict


#./clone.sh "$PGXNBRANCH" "$PGXNREPO"

cd $TEST_REPO

out Making checkout dirty
touch garbage
git add garbage
out Verify setup.sh errors out
if pgxntool/setup.sh; then
  echo "setup.sh should have exited non-zero" >&2
  exit 1
fi
git reset HEAD garbage
rm garbage

out Running setup.sh
pgxntool/setup.sh

out -v Status
ls
git status
git diff


out git commit
git commit -am "Test setup"


out Verify changing META.in.json works
# Need to sleep 1 second otherwise make won't pickup new timestamp
sleep 1
# Sanity check
[ -n "$DISTRIBUTION_NAME" ] && [ -n "$EXTENSION_NAME" ]

sed -i '' -e "s/DISTRIBUTION_NAME/$DISTRIBUTION_NAME/" -e "s/EXTENSION_NAME/$EXTENSION_NAME/" META.in.json
#git diff -u

out -v This make will produce a bogus '"already up to date"' message for some reason
make
git commit -am "Change META"


# Note: It's easier to do this now than when the checkout is all cluttered
out Test creating a release
make dist
unzip -l ../$DISTRIBUTION_NAME-0.1.0.zip | grep .asc | awk '{print $4}'
# grep exits with 1 if it can't find anything
out Making sure ONLY TEST_DOC.asc is in the distribution
unzip -l ../$DISTRIBUTION_NAME-0.1.0.zip | grep TEST_DOC.asc | awk '{print $4}'
[ `unzip -l ../$DISTRIBUTION_NAME-0.1.0.zip | grep -c .asc` -eq 1 ] || exit 1

out "Run setup.sh again to verify it doesn't over-write things"
pgxntool/setup.sh
git diff --exit-code

out Copy stuff from template to where it normally lives
cp -R t/* .

out Add extension to deps.sql
quote='"'
sed -i '' -e "s/CREATE EXTENSION \.\.\..*/CREATE EXTENSION ${quote}$EXTENSION_NAME${quote};/" test/deps.sql

out Make certain test/output gets created
[ ! -e $TEST_REPO/test/output ] || (out "ERROR! test/output directory should not exist!"; exit 1)
make test # TODO: ensure this exits non-zero
[ -e $TEST_REPO/test/output ] || (out "ERROR! test/output directory does not exist!"; exit 1)
[ -d $TEST_REPO/test/output ] || (out "ERROR! test/output is not a directory!"; exit 1)

out And copy expected output file to output dir that should now exist
cp $TOPDIR/pgxntool-test.source test/output

out Run make test again
make test || exit 1
out -v ^^^ Should be clean output ^^^

out Remove input and output directories, make sure output is not recreated
rm -rf $TEST_REPO/test/input $TEST_REPO/test/output
make test
[ ! -e $TEST_REPO/test/output ] || (out "ERROR! test/output directory exists!"; exit 1)

# Mess with output to test make results
echo >> $TEST_REPO/test/expected/pgxntool-test.out

out Test make results
make test
out -v ^^^ Should have a diff ^^^
make results
make test
out -v ^^^ Should be clean output, BUT NOTE THERE WILL BE A FAILURE DIRECTLY ABOVE! ^^^

check_log

# vi: expandtab sw=2 ts=2
