#!/bin/bash

trap 'echo "ERROR: $BASH_SOURCE: line $LINENO" >&2' ERR
set -o errexit -o errtrace -o pipefail

if [ "$1" == "-v" ]; then
  verboseout=1
  shift
fi
BASEDIR=`cd ${0%/*}; pwd`

. $BASEDIR/../.env
. $TOPDIR/lib.sh
cd $TEST_REPO

DISTRIBUTION_NAME=distribution_test

# Note: It's easier to do this now than when the checkout is all cluttered
out Test creating a release
make dist

out Checking zip
debug 19 unzip -l ../$DISTRIBUTION_NAME-0.1.0.zip #| grep .asc | awk '{print $4}'
unzip -l ../$DISTRIBUTION_NAME-0.1.0.zip | grep .asc | awk '{print $4}'

out "Ensure there's at least some docs in the distribution" # This is mostly to make sure the next test works
# grep exits with 1 if it can't find anything
docs=`unzip -l ../$DISTRIBUTION_NAME-0.1.0.zip | awk '{print $4}' | egrep 'asc|adoc|asciidoc|html|md|txt'` \
  || die 4 'no docs found in distribution'
[ -n "$docs" ] || die 4 'no docs found in distribution' # be paranoid
out Ensure there are no pgxntool docs in the distribution
debug_vars 29 docs

# Note the ""s are critical here. The rc handling is because grep returns 1 when no match is found
pgxn_docs="$(echo "$docs" | grep pgxntool || (rc=$?; [ $rc -le 1 ] || die $rc "grep returned $rc") )"
debug_vars 9 rc docs pgxn_docs

if [ -n "$pgxn_docs" ]; then
  die 5 "Found document files in pgxntool/: $pgxn_docs"
fi

check_log

# vi: expandtab sw=2 ts=2
